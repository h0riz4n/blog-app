plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.yandex'
version = '0.0.1'
description = 'API for Blog Application'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.6.0'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
 }

tasks.named('test') {
	useJUnitPlatform()
}

tasks.processResources {
	filesMatching("**/application*.yml") {
        filter {
            it.replaceAll('@name@', project.name)
            	.replaceAll('@version@', project.version)
               	.replaceAll('@group@', project.group)
               	.replaceAll('@description@', project.description)
        }
    }
}